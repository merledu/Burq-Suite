- test: Arithmetic_Basic_Test
  description: >
    Arithmetic instruction test, no load/store/branch instructions
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_0=riscv_int_numeric_corner_stream,4
    +no_fence=1
    +no_data_page=1
    +no_branch_jump=1
    +boot_mode=m
    +no_csr_instr=1
  iterations: 1
  gen_test: riscv_instr_base_test
  rtl_test: core_base_test

- test: Random_Instruction_Test
  description: >
    Random instruction stress test
  iterations: 1
  gen_test: riscv_instr_base_test
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_0=riscv_load_store_rand_instr_stream,4
    # +directed_instr_1=riscv_loop_instr,4
    +directed_instr_2=riscv_hazard_instr_stream,4
    +directed_instr_3=riscv_load_store_hazard_instr_stream,4
    +directed_instr_4=riscv_multi_page_load_store_instr_stream,4
    +directed_instr_5=riscv_mem_region_stress_test,4
    +directed_instr_6=riscv_jal_instr,4
  rtl_test: core_base_test

- test: Jump_Stress_Test
  description: >
    Stress back-to-back jump instruction test
  iterations: 2
  gen_test: riscv_instr_base_test
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_1=riscv_jal_instr,20
  rtl_test: core_base_test

- test: Random_Jump_Test
  description: >
    Jump among large number of sub-programs, stress testing iTLB operations.
  iterations: 2
  gen_test: riscv_instr_base_test
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_0=riscv_load_store_rand_instr_stream,8
  rtl_test: core_base_test

- test: MMU_Stress_Test
  description: >
    Test with different patterns of load/store instructions, stress test MMU
    operations.
  iterations: 2
  gen_test: riscv_instr_base_test
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_0=riscv_load_store_rand_instr_stream,40
    +directed_instr_1=riscv_load_store_hazard_instr_stream,40
    # +directed_instr_2=riscv_multi_page_load_store_instr_stream,10
    +directed_instr_3=riscv_mem_region_stress_test,10
  rtl_test: core_base_test

- test: Unaligned_Load_Store_Test
  description: >
    Unaligned load/store test
  iterations: 1
  gen_test: riscv_instr_base_test
  gcc_opts: >
    -mno-strict-align
  gen_opts: >
    +instr_cnt=100
    +num_of_sub_program=0
    +directed_instr_0=riscv_load_store_rand_instr_stream,20
    +directed_instr_1=riscv_load_store_hazard_instr_stream,20
    # +directed_instr_2=riscv_multi_page_load_store_instr_stream,5
    +directed_instr_3=riscv_mem_region_stress_test,5
    +enable_unaligned_load_store=1
  rtl_test: core_base_test